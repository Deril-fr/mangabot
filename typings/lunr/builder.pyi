from typing import Any, Callable

from lunr.index import Index
from lunr.pipeline import Pipeline

class Builder:
    def __init__(self) -> None: ...
    def ref(self, ref: str) -> None: ...
    def field(self, field_name: str, boost: int = 1, extractor: Callable[[Any], Any] | None = None) -> None: ...
    def add(self, doc: dict[str, Any], attributes: dict[str, Any] | None = None) -> None: ...
    def build(self) -> Index: ...

    pipeline: Pipeline
    search_pipeline: Pipeline
